version: '3.8'

services:
  redis:
    image: redis
    ports:
      - "6379:6379"
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    networks:
      - backend

  vote:
    image: yoannchh/3dokr-vote:latest
    ports:
      - "5001:5000"
    depends_on:
      - redis
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    networks:
      - frontend
      - backend
  worker:
    image: yoannchh/3dokr-worker:latest
    depends_on:
      - redis
      - postgres
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    networks:
      - backend

  result:
    image: yoannchh/3dokr-result:latest
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    networks:
      - frontend
      - backend

  postgres:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend


volumes:
  postgres_data:

networks:
  frontend:  # Create a custom overlay network for frontend services (vote and result)
  backend:   # Create a custom overlay network for backend services (redis, postgres, worker)

